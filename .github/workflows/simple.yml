name: Shell Commands

on:
  repository_dispatch:
    types: [build]

jobs:
  get-github-object:
    runs-on: ubuntu-latest
    steps:
      - name: Get client payload
        run: |
          echo "github = ${{github}}"
          echo "\n\n"
          echo "github.event = ${{github.event}}"
          echo "\n\n"
          echo "github.event.client_payload = ${{github.event.client_payload}}"
          echo "\n\n"
          echo "github.event.client_payload.Repositories = ${{github.event.client_payload.Repositories}}"
          #echo "::set-env name=payload::${{github.event.client_payload.Repositories}}"
          echo "payload = ${{github.event.client_payload.Repositories}}" >> GITHUB_ENV
      - name: map repo with branch
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            printenv "payload"
            payloadENV = get_state(payload)
            print(payloadENV)
            deployments = payloadENV.split(",")
            print(deployments)
            repoBranchMap = {}
            for deploy in deployments:
              repositoryBranch = deploy.split(":")
              repoBranchMap[repositoryBranch[0]] = repositoryBranch[1]
            #echo "repoBranch = repoBranchMap" >> GITHUB_ENV
            print(repoBranchMap)
            save_state(repoBranch, repoBranchMap)
      - name: Print the map
        run: |
          echo "${env.STATE_repoBranch}"
  run-shell-commands:
    runs-on: ubuntu-latest
    steps:
      - name: Echo A String
        run: echo "Hello World"
      - name: Multiline Script
        run: |
          node -v
          npm -v
      - name: Python Commands
        run: |
          import platform
          print(platform.processor())
        shell: python
  run-windows-commands:
    runs-on: windows-latest
    needs: ["run-shell-commands"]
    steps:
      - name: Directory PowerShell
        run: Get-Location
      - name: Directory Bash
        run: pwd
        shell: bash