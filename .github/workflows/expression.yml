name: Context, Expression, Functions
on:
  push:
jobs:
  Expression:
    runs-on: ubuntu-latest
    steps:
    - name: expression examples
      env:
        OneBiggerThanTwo: ${{1 > 2}}
        CityName: ${{'Yerevan'}}
        IsYerevanANDyerevanEqual: ${{'Yerevan' == 'yerevan'}}
      run: |
        echo "OneBiggerThanTwo: $OneBiggerThanTwo"
        echo "CityName: $CityName"
        echo "IsYerevanANDyerevanEqual: $IsYerevanANDyerevanEqual"
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo "$MATRIX_CONTEXT"
  job1:
    runs-on: ubuntu-latest
    #if: github.event_name == 'pull_request'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
    - run: build
    - name: Previous Step Failed
      if: failure()
      run: echo "JOB2 first step failed"
    - name: Always run this step
      if: always()
      run: echo "this step always run"
